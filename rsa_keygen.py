#python 2.7
#ToDo: Not sure?

#import cryptography module 
from Crypto.PublicKey import RSA 
#import argument module
import argparse

#set variable for the arg parsers
parser = argparse.ArgumentParser()
#add bits argument 
parser.add_argument('--bits', '-b', help='Number of key bits, it must be a multiple of 256, and no smaller than 1024', dest='bits')
args = parser.parse_args()
#set bit variable to the value in the bits arg
bit = int(args.bits)

#check values are in args and print help if not
if args.bits is None:
    parser.print_help()
    quit()

#set new_key to values generated by RSA.generate function which will contain public and private keys
new_key = RSA.generate(bit, e=65537) 

#set publc key and private key variables
public_key = new_key.publickey().exportKey("PEM") 
private_key = new_key.exportKey("PEM") 

#print out message
print """Script is a modified version of the keygen script from Black Hat Python, thank you @jms_dot_py for all your hard work!"""
#print out public and private keys
print public_key
print private_key
